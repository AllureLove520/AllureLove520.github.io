<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>村长ABC</title>
  
  <subtitle>孤独、是一种态度</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blon.club/"/>
  <updated>2020-01-21T15:17:09.393Z</updated>
  <id>https://blon.club/</id>
  
  <author>
    <name>村长ABC</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>微信小程序-实现扫码连接wifi</title>
    <link href="https://blon.club/2020/01/21/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E5%AE%9E%E7%8E%B0%E6%89%AB%E7%A0%81%E8%BF%9E%E6%8E%A5wifi/"/>
    <id>https://blon.club/2020/01/21/微信小程序-实现扫码连接wifi/</id>
    <published>2020-01-21T14:31:37.000Z</published>
    <updated>2020-01-21T15:17:09.393Z</updated>
    
    <content type="html"><![CDATA[<p><strong>项目需求：当客人来家里做客，需要连接wifi，如果输入密码容易输错，所以想到利用微信扫描小程序二维码，实现微信扫码自动连接wifi，以此来达到快速连接。</strong></p><p><strong>缺点：此方法连接wifi简单快捷，但制作略显麻烦</strong></p><p>工具：<a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html" target="_blank" rel="noopener">微信开发工具</a> 、<a href="https://www.jianguoyun.com/p/DYZJwZEQnOjaBxi8xc4C" target="_blank" rel="noopener">源代码</a></p><h4 id="一、微信公众平台官网，注册账号，绑定自己的微信，进入小程序，选择左侧的“开发”–-gt-“开发设置”，复制小程序ID"><a href="#一、微信公众平台官网，注册账号，绑定自己的微信，进入小程序，选择左侧的“开发”–-gt-“开发设置”，复制小程序ID" class="headerlink" title="一、微信公众平台官网，注册账号，绑定自己的微信，进入小程序，选择左侧的“开发”–&gt;“开发设置”，复制小程序ID"></a>一、<a href="https://mp.weixin.qq.com/" target="_blank" rel="noopener">微信公众平台官网</a>，注册账号，绑定自己的微信，进入小程序，选择左侧的“开发”–&gt;“开发设置”，复制小程序ID</h4><h4 id="二、打开微信开发工具，导入项目，AppID可以使用刚刚复制的小程序ID"><a href="#二、打开微信开发工具，导入项目，AppID可以使用刚刚复制的小程序ID" class="headerlink" title="二、打开微信开发工具，导入项目，AppID可以使用刚刚复制的小程序ID"></a>二、打开微信开发工具，导入项目，AppID可以使用刚刚复制的小程序ID</h4><p><img src="https://i.loli.net/2020/01/21/qWvByfjQdkHnUFg.png" alt></p><p>修改 index.js 文件</p><pre><code class="line-numbers language-js">data: {    // time: (new Date()).toString    SSID: &#39;PandoraBox-2.4G&#39;,            // 修改为自己的wifi账号    password: &#39;1312140691&#39;,                // 修改为自己的wifi密码    BSSID: &#39;D8:C8:E9:E3:75:18&#39;,        // 这个修改为自己的bssid 路由器后台能看到，也可以不填        endError: &#39;&#39;, //连接最后的提示    startError: &#39;&#39;, //初始化错误提示    networkType: &#39;&#39; ,//网络状态    iswifi: null  },</code></pre><p>修改完成后，点击微信开发工具里的工具–&gt;上传，完成后打开刚刚登入的微信公众平台，进入“版本管理”，在开发版本能看到刚刚上传的小程序，点击右侧下拉箭头，选择为体验版本，然后会自动生成一个二维码，该二维码就是小程序的二维码，然后就可以微信扫码进行使用了，当然你也可以提交审核。致辞教程结束</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;项目需求：当客人来家里做客，需要连接wifi，如果输入密码容易输错，所以想到利用微信扫描小程序二维码，实现微信扫码自动连接wifi，以此来达到快速连接。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;缺点：此方法连接wifi简单快捷，但制作略显麻烦&lt;/st
      
    
    </summary>
    
      <category term="微信小程序" scheme="https://blon.club/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
      <category term="微信小程序" scheme="https://blon.club/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>Java 配置环境变量</title>
    <link href="https://blon.club/2019/09/20/Java-%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/"/>
    <id>https://blon.club/2019/09/20/Java-配置环境变量/</id>
    <published>2019-09-19T16:29:26.000Z</published>
    <updated>2019-09-19T16:31:37.086Z</updated>
    
    <content type="html"><![CDATA[<h6 id="Java配置环境变量"><a href="#Java配置环境变量" class="headerlink" title="Java配置环境变量"></a>Java配置环境变量</h6><blockquote><p>前言：前段时间家里停电，然后就跑去网吧，配置环境变量时发现不知道怎么弄了，看样子估计又忘的差不多了😂😂😂</p></blockquote><p>以win10 为例 ，安装JDK啥的就不说了，主要注意不要安装在C盘，安装路径不要有空格及只中文。</p><p>使用左下角的搜索 搜索“环境变量”，在系统变量栏中新建系统变量</p><p>变量参数设置如下</p><ul><li>变量名：JAVA_HOME</li><li>变量值：E:\Java\jdk-11.0.2  // 这里根据自己的实际路径配置</li></ul><p><img src="https://i.loli.net/2019/09/19/RD6Ym5n2ku3iq7g.png" alt="RD6Ym5n2ku3iq7g"></p><p><strong>Path设置</strong></p><p><strong>注意：</strong>在 Windows10 中，Path 变量里是分条显示的，我们需要将 <strong>%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin;</strong> 分开添加，否则无法识别：</p><ul><li>找到变量名Path，双击打开它，然后新建</li><li>变量值：%JAVA_HOME%\bin</li><li>变量值：%JAVA_HOME%\jre\bin</li></ul><p><img src="https://i.loli.net/2019/09/19/Kr4vExUsAXo8zTF.png" alt="Kr4vExUsAXo8zTF"></p><p><img src="https://i.loli.net/2019/09/20/8YKFPoCMwaOikW9.png" alt="8YKFPoCMwaOikW9"></p><p>.最后打开cmd 输入java -version、java、javac出现以下信息，说明环境变量配置成功；</p><p><img src="https://i.loli.net/2019/09/19/iNMLjpP5GgxJewn.png" alt="iNMLjpP5GgxJewn"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h6 id=&quot;Java配置环境变量&quot;&gt;&lt;a href=&quot;#Java配置环境变量&quot; class=&quot;headerlink&quot; title=&quot;Java配置环境变量&quot;&gt;&lt;/a&gt;Java配置环境变量&lt;/h6&gt;&lt;blockquote&gt;
&lt;p&gt;前言：前段时间家里停电，然后就跑去网吧，配置环境变
      
    
    </summary>
    
      <category term="java" scheme="https://blon.club/categories/java/"/>
    
    
      <category term="java" scheme="https://blon.club/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Java 二维数组实现登入系统</title>
    <link href="https://blon.club/2019/09/14/Java-%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E5%AE%9E%E7%8E%B0%E7%99%BB%E5%85%A5%E7%B3%BB%E7%BB%9F/"/>
    <id>https://blon.club/2019/09/14/Java-二维数组实现登入系统/</id>
    <published>2019-09-14T00:46:41.000Z</published>
    <updated>2019-09-14T00:47:54.089Z</updated>
    
    <content type="html"><![CDATA[<h5 id="Java-二维数组实现登入系统"><a href="#Java-二维数组实现登入系统" class="headerlink" title="Java 二维数组实现登入系统"></a>Java 二维数组实现登入系统</h5><p>思路分析</p><p>​ 二维数组充当数据库</p><p>​ 用户输入存放在一维数组</p><p>​ 用户输入的值与数据库里的值进行比较</p><pre><code class="line-numbers language-java">import java.util.Scanner;public class main {    public static void main(String[] args) {        String[][] data = {{"小红","123"},{"小王","456"},{"小明","789"}}; // 数据库        Scanner sca = new Scanner(System.in);        while (true) {            System.out.println(&quot;请输入用户名称&quot;);            String userName = sca.nextLine();            System.out.println(&quot;请输入密码&quot;);            String password = sca.nextLine();            String[] userBox = {userName, password};            if (Login(data, userBox)) {                System.out.println(&quot;登录成功&quot;);                break;            } else {                System.out.println(&quot;用户名或密码错误&quot;);            }        }    }    public static boolean Login (String[][] data , String[] userBox){        for (int i = 0; i &lt; data.length; i++) {            if (data[i][0].equals(userBox[0]) &amp;&amp; data[i][1].equals(userBox[1])){                return true;            }        }        return false;    }}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;Java-二维数组实现登入系统&quot;&gt;&lt;a href=&quot;#Java-二维数组实现登入系统&quot; class=&quot;headerlink&quot; title=&quot;Java 二维数组实现登入系统&quot;&gt;&lt;/a&gt;Java 二维数组实现登入系统&lt;/h5&gt;&lt;p&gt;思路分析&lt;/p&gt;
&lt;p&gt;​ 二维数组
      
    
    </summary>
    
      <category term="java小练习" scheme="https://blon.club/categories/java%E5%B0%8F%E7%BB%83%E4%B9%A0/"/>
    
    
      <category term="java小练习" scheme="https://blon.club/tags/java%E5%B0%8F%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Java 简易计算器</title>
    <link href="https://blon.club/2019/09/14/Java-%E7%AE%80%E6%98%93%E8%AE%A1%E7%AE%97%E5%99%A8/"/>
    <id>https://blon.club/2019/09/14/Java-简易计算器/</id>
    <published>2019-09-14T00:43:23.000Z</published>
    <updated>2019-09-14T00:45:18.712Z</updated>
    
    <content type="html"><![CDATA[<h5 id="Java-简易计算器"><a href="#Java-简易计算器" class="headerlink" title="Java 简易计算器"></a>Java 简易计算器</h5><p>题目要求：输入数字1，输入符号，输入数字2，计算结果，保留结果，下次计算</p><pre><code class="line-numbers language-java">public class Calculator {    double num = 0;     // 用来装计算结果    public double count(double a, String symbol, double b) {    // (数值1 ，符号 ， 数值2)        switch (symbol) {            case &quot;+&quot;: num = a + b; break;            case &quot;-&quot;: num = a - b; break;            case &quot;*&quot;: num = a * b; break;            case &quot;/&quot;: num = a / b; break;        }        return num;     // 返回计算结果    }}</code></pre><h5 id="创建Calculator对象"><a href="#创建Calculator对象" class="headerlink" title="创建Calculator对象"></a>创建Calculator对象</h5><pre><code class="line-numbers language-java">import java.util.Scanner;public class Main {    public static void main(String[] args) {        Calculator calculator = new Calculator();        Scanner sca = new Scanner(System.in);        System.out.println(&quot;请输入第一个数字&quot;);        int i = sca.nextInt();        boolean b = true;   // 添加标记        double count = 0;        while (true) {            System.out.println(&quot;请输入符号&quot;);            String next = sca.next();            if (next.equals(&quot;=&quot;)) {                System.out.println(&quot;程序结束&quot;);                break;            }            if (!(next.equals(&quot;+&quot;) || next.equals(&quot;-&quot;) || next.equals(&quot;*&quot;) || next.equals(&quot;/&quot;))) {                System.out.println(&quot;你输入的符号不正确，仅支持 + - * / =&quot;);                continue;            }            System.out.println(&quot;请输入第二个数字&quot;);            int j = sca.nextInt();            /* 如果标记为True 则执行代码块1，调用方法将返回值交给count 变量 反之则执行代码块2，将count替代             * 参数i */            if (b) {                count = calculator.count(i, next, j);                System.out.println(count);            } else {                count = calculator.count(count, next, j);                System.out.println(count);            }            b = false;    // 第一次循环后改变标记        }    }}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;Java-简易计算器&quot;&gt;&lt;a href=&quot;#Java-简易计算器&quot; class=&quot;headerlink&quot; title=&quot;Java 简易计算器&quot;&gt;&lt;/a&gt;Java 简易计算器&lt;/h5&gt;&lt;p&gt;题目要求：输入数字1，输入符号，输入数字2，计算结果，保留结果，下次计算&lt;/
      
    
    </summary>
    
      <category term="java小练习" scheme="https://blon.club/categories/java%E5%B0%8F%E7%BB%83%E4%B9%A0/"/>
    
    
      <category term="java小练习" scheme="https://blon.club/tags/java%E5%B0%8F%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Java 冒泡排序</title>
    <link href="https://blon.club/2019/09/14/Java-%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/"/>
    <id>https://blon.club/2019/09/14/Java-冒泡排序/</id>
    <published>2019-09-14T00:39:17.000Z</published>
    <updated>2019-09-14T00:45:25.633Z</updated>
    
    <content type="html"><![CDATA[<h5 id="Java-冒泡排序"><a href="#Java-冒泡排序" class="headerlink" title="Java 冒泡排序"></a>Java 冒泡排序</h5><p>冒泡排序是一种简单的排序算法，原理是比较相邻的两个元素，如果第一个比第二个大则交换他们。</p><p>思路：</p><ol><li>比较两个元素，如果第一个比第二个大则交换他们</li><li>对每一对相邻的元素做同样的操作，最后的元素将会最大值</li><li>对所有元素重复以上操作，除了最后一个</li></ol><pre><code class="line-numbers language-java">public static void bubbleSort(int[] arr) {        for (int i = arr.length; i &gt; 0; i--) {      //外层循环移动游标            for (int j = 0; j &lt; i &amp;&amp; (j + 1) &lt; i; j++) {    //内层循环遍历游标及之后(或之前)的元素                if (arr[j] &gt; arr[j + 1]) {                    int temp = arr[j];                    arr[j] = arr[j + 1];                    arr[j + 1] = temp;                    System.out.println(&quot;Sorting: &quot; + Arrays.toString(arr));                }            }        }    }</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;Java-冒泡排序&quot;&gt;&lt;a href=&quot;#Java-冒泡排序&quot; class=&quot;headerlink&quot; title=&quot;Java 冒泡排序&quot;&gt;&lt;/a&gt;Java 冒泡排序&lt;/h5&gt;&lt;p&gt;冒泡排序是一种简单的排序算法，原理是比较相邻的两个元素，如果第一个比第二个大则交换他
      
    
    </summary>
    
      <category term="java小练习" scheme="https://blon.club/categories/java%E5%B0%8F%E7%BB%83%E4%B9%A0/"/>
    
    
      <category term="java小练习" scheme="https://blon.club/tags/java%E5%B0%8F%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>水仙花案例</title>
    <link href="https://blon.club/2019/09/14/%E6%B0%B4%E4%BB%99%E8%8A%B1%E6%A1%88%E4%BE%8B/"/>
    <id>https://blon.club/2019/09/14/水仙花案例/</id>
    <published>2019-09-14T00:36:18.000Z</published>
    <updated>2019-09-14T00:38:21.068Z</updated>
    
    <content type="html"><![CDATA[<h5 id="水仙花案例"><a href="#水仙花案例" class="headerlink" title="水仙花案例"></a>水仙花案例</h5><p>例题：求出3位数的水仙花数（100~999）之间，水仙花数，是指一个三位数的，每个位的3次幂之和（也叫立方和）等于它本身。</p><p><strong>代码实例</strong></p><pre><code class="line-numbers language-java">public class Demo {    public static void main(String[] args) {        for (int i = 100; i &lt;= 999; i++) {            // 首先求出这个数的百位、十位、个位            int b = i / 100;   // 百位            int s = i % 100 / 10;    // 十位            int g = i % 10;     // 个位            if (Math.pow(b, 3) + Math.pow(s, 3) + Math.pow(g, 3) == i) {    // Math.pow计算参数次幂                //int num = (int)(Math.pow(b ,3)+Math.pow(s ,3)+Math.pow(g ,3));                System.out.println(i + &quot;\t是水仙花数&quot;);            }        }    }}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;水仙花案例&quot;&gt;&lt;a href=&quot;#水仙花案例&quot; class=&quot;headerlink&quot; title=&quot;水仙花案例&quot;&gt;&lt;/a&gt;水仙花案例&lt;/h5&gt;&lt;p&gt;例题：求出3位数的水仙花数（100~999）之间，水仙花数，是指一个三位数的，每个位的3次幂之和（也叫立方和）等于它
      
    
    </summary>
    
      <category term="java小练习" scheme="https://blon.club/categories/java%E5%B0%8F%E7%BB%83%E4%B9%A0/"/>
    
    
      <category term="java小练习" scheme="https://blon.club/tags/java%E5%B0%8F%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Java 鸡兔同笼案例</title>
    <link href="https://blon.club/2019/09/14/Java-%E9%B8%A1%E5%85%94%E5%90%8C%E7%AC%BC%E6%A1%88%E4%BE%8B/"/>
    <id>https://blon.club/2019/09/14/Java-鸡兔同笼案例/</id>
    <published>2019-09-14T00:33:18.000Z</published>
    <updated>2019-09-14T00:35:41.248Z</updated>
    
    <content type="html"><![CDATA[<p>Java “鸡兔同笼”案例</p><p>例题：假设鸡和兔子的总数是50只，脚有160只，求出鸡跟兔子的数量</p><p>要求：在已知头数和脚数的情况下用for循环的方式求出鸡跟兔子的数量</p><p>首先，我们先用数学的方式计算</p><ul><li><p><strong>方法一“假设法”</strong></p><p>假设笼子里的全部都是鸡，那么50只鸡，每只鸡有两只脚，就有50*2=100只脚，但题目脚的总数是160只，比100多了160-100=60只。当然笼子里不止有鸡还有兔子，所以我们每往笼子里加一只兔子就减少一只鸡，笼子里的脚就会增加4-2=2只，要让笼子里的鸡增加到60只，那么需要增加兔子60/2=30只，也就是说，兔子的数量是30只，这是我们将总数50减去兔子的数量30得到鸡的数量20只。</p></li><li><p><strong>方法二“方程式”</strong></p><p>假设鸡的数量为 x ，兔子的数量为26-x，鸡有两只脚，兔子有4只脚，脚的总数为160，得出一元一次方程</p><p>$$<br>2x + 4(50-x) = 160<br>$$</p><p>计算的出 x = 20 ，则兔子的数量50-20=30只</p></li></ul><p><strong>代码实例</strong></p><pre><code class="line-numbers language-java">import java.util.Scanner;public class Main {    public static void main(String[] args) {        Scanner sca = new Scanner(System.in);        System.out.println(&quot;请输入鸡兔总数&quot;);        int i = sca.nextInt();        System.out.println(&quot;请输入脚的总数&quot;);        int j = sca.nextInt();        // 第一种方法 假设法        int rabbit = (j - i * 2) / 2;        int chicken = i - rabbit;        System.out.println(&quot;鸡的数量&quot; + chicken + &quot;\t&quot; + &quot;兔子的数量&quot; + rabbit);        System.out.println(&quot;==============================&quot;);        // 调用方法        method(i, j);    }    // 第二种方法，使用for循环    private static void method(int i, int j) {        // 使用for循环        for (int k = 1; k &lt;= i; k++) {            // i = 鸡兔总数            // k = 当前变量            // j = 脚的数量            if (k * 2 + (i - k) * 4 == j) {                System.out.println(&quot;鸡的数量&quot; + k + &quot;\t&quot; + &quot;兔子的数量&quot; + (i - k));                break;            }        }    }}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Java “鸡兔同笼”案例&lt;/p&gt;
&lt;p&gt;例题：假设鸡和兔子的总数是50只，脚有160只，求出鸡跟兔子的数量&lt;/p&gt;
&lt;p&gt;要求：在已知头数和脚数的情况下用for循环的方式求出鸡跟兔子的数量&lt;/p&gt;
&lt;p&gt;首先，我们先用数学的方式计算&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;st
      
    
    </summary>
    
      <category term="java小练习" scheme="https://blon.club/categories/java%E5%B0%8F%E7%BB%83%E4%B9%A0/"/>
    
    
      <category term="java小练习" scheme="https://blon.club/tags/java%E5%B0%8F%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>打印2～100之间的素数</title>
    <link href="https://blon.club/2019/09/14/%E6%89%93%E5%8D%B02%EF%BD%9E100%E4%B9%8B%E9%97%B4%E7%9A%84%E7%B4%A0%E6%95%B0/"/>
    <id>https://blon.club/2019/09/14/打印2～100之间的素数/</id>
    <published>2019-09-14T00:29:46.000Z</published>
    <updated>2019-09-14T00:32:06.050Z</updated>
    
    <content type="html"><![CDATA[<h5 id="打印2～100之间的素数"><a href="#打印2～100之间的素数" class="headerlink" title="打印2～100之间的素数"></a>打印2～100之间的素数</h5><p>素数（又称质数）有无限个，素数的定义：除了1和他自身外，不能被其他自然数整除的数叫做素数，否则称为合数，</p><p>输出打印 2 ~ 100之间的素数</p><pre><code class="line-numbers language-java">import java.util.ArrayList;public class Main {    public static void main(String[] args) {        for (int i = 2; i &lt;= 100; i++) {            if (isPrime(i)){                System.out.print(&quot; &quot; + i);            }        }    }    // 判断是否为素数的方法    public static boolean isPrime (int num) {        for (int i = 2 ; i &lt;= Math.sqrt(num);i++) {            if (num % i == 0){                return false;            }        }        return true;    }}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;打印2～100之间的素数&quot;&gt;&lt;a href=&quot;#打印2～100之间的素数&quot; class=&quot;headerlink&quot; title=&quot;打印2～100之间的素数&quot;&gt;&lt;/a&gt;打印2～100之间的素数&lt;/h5&gt;&lt;p&gt;素数（又称质数）有无限个，素数的定义：除了1和他自身外，不能
      
    
    </summary>
    
      <category term="java小练习" scheme="https://blon.club/categories/java%E5%B0%8F%E7%BB%83%E4%B9%A0/"/>
    
    
      <category term="java小练习" scheme="https://blon.club/tags/java%E5%B0%8F%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Java 位(bit)运算</title>
    <link href="https://blon.club/2019/08/28/Java-%E4%BD%8D-bit-%E8%BF%90%E7%AE%97/"/>
    <id>https://blon.club/2019/08/28/Java-位-bit-运算/</id>
    <published>2019-08-28T04:24:15.000Z</published>
    <updated>2019-08-28T04:27:42.578Z</updated>
    
    <content type="html"><![CDATA[<h5 id="Java-位-bit-运算"><a href="#Java-位-bit-运算" class="headerlink" title="Java 位(bit)运算"></a>Java 位(bit)运算</h5><p><strong>&amp; 按位与    | 按位或    ^ 按位异或    ~ 按位取反    &lt;&lt; 按位左位移    &gt;&gt;按位右位移    &gt;&gt;&gt; 按位右位移（无符号）</strong></p><p>计算步骤</p><ol><li>将左右两边的值转换成二进制</li><li>竖着按照对应位置进行 &amp; | ^ 计算 （<strong>1 代表true    0 代表false</strong>）</li></ol><pre><code class="line-numbers language-Java">/* 位运算 3 &amp; 5 = ？？？   将值转换成二进制   3的二进制 00000011   5的二进制 00000101   --------------------               00000001    最终结果为 1 位运算 3 | 5 = ？？？   将值转换成二进制   3的二进制 00000011   5的二进制 00000101   --------------------               00000111    最终结果为 7位运算 3 ^ 5 = ？？？   异或两个值不一样就为true   将值转换成二进制   3的二进制 00000011   5的二进制 00000101   --------------------               00000110    最终结果为 6    */</code></pre><h6 id="原码、反码、补码"><a href="#原码、反码、补码" class="headerlink" title="原码、反码、补码"></a>原码、反码、补码</h6><ul><li>正数的三个码都是一样的         </li><li>负数二进制的第一位代表符号位，1 为负数   0为正数 </li><li>负数的反码保持符号位不动，其余取反</li><li>负数的补码在反码的基础上加1</li><li><strong>计算机中不管是正数还是负数，都是以补码的形式进行存储的</strong></li></ul><p>​                                    10                                                                         -10</p><p>原码 00000000 00000000 00000000 00001010    原码 10000000 00000000 00000000 00001010</p><p>反码 00000000 00000000 00000000 00001010    反码 11111111 11111111 11111111 00000101</p><p>补码 00000000 00000000 00000000 00001010    补码 11111111 11111111 11111111 00000110</p><h6 id="左位移-lt-lt"><a href="#左位移-lt-lt" class="headerlink" title="左位移 &lt;&lt;"></a>左位移 &lt;&lt;</h6><pre><code class="line-numbers language-java">10 &lt;&lt; 1 = ??    // 左位移 1 位     00000000 00000000 00000000 00001010    // 10的二进制     0000000 00000000 00000000 000010100    // 左位移1位，结尾处补上一个0     结果为：2010 &lt;&lt; 2 = ??    // 左位移 2 位     00000000 00000000 00000000 00001010    // 10的二进制     000000 00000000 00000000 0000101000    // 左位移1位，结尾处补上两个0     结果为：40     // 总结：往左位移相当于乘以2的位移次幂</code></pre><h6 id="右位移-gt-gt"><a href="#右位移-gt-gt" class="headerlink" title="右位移 &gt;&gt;"></a>右位移 &gt;&gt;</h6><pre><code class="line-numbers language-java">10 &gt;&gt; 1 = ??    // 右位移 1 位     00000000 00000000 00000000 00001010    // 10的二进制     000000000 00000000 00000000 0000101    // 右位移1位，头部添加一个0 结尾处删除一个0     结果为：5     // 总结 相当除于2的位移次幂</code></pre><h6 id="无符号右位移-gt-gt-gt"><a href="#无符号右位移-gt-gt-gt" class="headerlink" title="无符号右位移 &gt;&gt;&gt;"></a>无符号右位移 &gt;&gt;&gt;</h6><pre><code class="line-numbers language-java">-10 &gt;&gt;&gt; 1 = ??    11111111 11111111 11111111 00000110    011111111 11111111 11111111 0000011        // &gt;&gt;&gt;不保留符号位，填0就完事了   &gt;&gt;保留符号位，其余填1</code></pre><h5 id="amp-和-amp-amp-的区别"><a href="#amp-和-amp-amp-的区别" class="headerlink" title="&amp; 和 &amp;&amp; 的区别"></a>&amp; 和 &amp;&amp; 的区别</h5><ul><li>&amp; 可以视为逻辑运算，也可以视为位运算，&amp;&amp; 只能当做逻辑运算来用</li><li>如果两个符号都是逻辑运算符，那么 &amp; 两边都是true时，结果为true，反之为false</li><li>&amp;&amp; 短路与，正常情况下与 &amp; 结果一致，只有当前面为false时，才会发生短路，整体结果为false</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;Java-位-bit-运算&quot;&gt;&lt;a href=&quot;#Java-位-bit-运算&quot; class=&quot;headerlink&quot; title=&quot;Java 位(bit)运算&quot;&gt;&lt;/a&gt;Java 位(bit)运算&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;&amp;amp; 按位与    | 按位或
      
    
    </summary>
    
      <category term="java" scheme="https://blon.club/categories/java/"/>
    
    
      <category term="java" scheme="https://blon.club/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Java 继承</title>
    <link href="https://blon.club/2019/08/14/Java-%E7%BB%A7%E6%89%BF/"/>
    <id>https://blon.club/2019/08/14/Java-继承/</id>
    <published>2019-08-14T15:59:16.000Z</published>
    <updated>2019-09-10T16:09:35.017Z</updated>
    
    <content type="html"><![CDATA[<h5 id="Java继承"><a href="#Java继承" class="headerlink" title="Java继承"></a>Java继承</h5><p>在《Think in java》中有这样一句话：复用代码是Java众多引人注目的功能之一。但要想成为极具革命性的语言，仅仅能够复制代码并对加以改变是不够的，它还必须能够做更多的事情。在这句话中最引人注目的是“复用代码”,尽可能的复用代码使我们程序员一直在追求的，现在我来介绍一种复用代码的方式，也是java三大特性之一—继承。</p><p>继承主要解决的问题是<strong>共性抽取</strong></p><h5 id="继承关系当中的特点"><a href="#继承关系当中的特点" class="headerlink" title="继承关系当中的特点"></a>继承关系当中的特点</h5><ol><li>子类可以拥有父类的内容</li><li>子类还可以拥有自己专有的内容</li></ol><h5 id="父子类定义格式"><a href="#父子类定义格式" class="headerlink" title="父子类定义格式"></a>父子类定义格式</h5><p>定义父类</p><pre><code class="line-numbers language-java">// 定义父类，就是一个普通的类public class 父类名称 {      // ...  }</code></pre><p>定义子类</p><pre><code class="line-numbers language-java">public class 子类名称 extends 父类名称 {    // ...}</code></pre><h5 id="继承中成员变量访问特点"><a href="#继承中成员变量访问特点" class="headerlink" title="继承中成员变量访问特点"></a>继承中成员变量访问特点</h5><p>创建父类</p><pre><code class="line-numbers language-java">public class fu{...}</code></pre><p>创建子类</p><pre><code class="line-numbers language-java">public　class zi extends fu{...}</code></pre><p>在父子继承关系中，如果成员变量重名，那么创建子类对象是有两种访问方法</p><ul><li><p>直接访问 通过子类对象访问成员变量</p><p>规则：就近原则，等号左边是谁就优先用谁 没有则向上找</p><pre><code class="line-numbers language-java">zi z = new zi();//等号左边是子类，则用子类的成员变量 i        System.out.println(z.i);</code></pre></li><li><p>间接访问 通过成员方法访问成员变量</p><p>规则：该方法属于谁就优先用谁</p></li></ul><p><strong>三种变量重名</strong></p><table><thead><tr><th>局部变量</th><th>直接写成变量名</th></tr></thead><tbody><tr><td><strong>本类的成员变量</strong></td><td><strong>this.成员变量名</strong></td></tr><tr><td><strong>父类的成员变量</strong></td><td><strong>super.成员变量名</strong></td></tr></tbody></table><h5 id="继承中成员方法访问特点"><a href="#继承中成员方法访问特点" class="headerlink" title="继承中成员方法访问特点"></a>继承中成员方法访问特点</h5><ul><li><p>在父子类继承关系中，创建子类对象，访问成员方法的规则</p><p>规则：创建的对象是谁，就优先用谁，没有则向上找 ，也就是说等号右边new了谁那就用谁</p></li></ul><p><strong>注意事项：无论是成员方法还是成员变量，如果没有都是向上找父类，绝对不会向下找子类</strong></p><h5 id="方法覆盖重写注意事项"><a href="#方法覆盖重写注意事项" class="headerlink" title="方法覆盖重写注意事项"></a>方法覆盖重写注意事项</h5><ul><li>必须保证父子类之间方法名称相同，参数列表也相同。<code>@Override</code>写在方法前面，这个注解用来检测是否正确的方法覆盖重写</li><li>子类方法的返回值必须<strong>小于等于</strong>父类方法返回值的范围</li><li>子类方法的权限必须<strong>大于等于</strong>父类的权限修饰符</li></ul><h5 id="继承中构造方法的访问特点"><a href="#继承中构造方法的访问特点" class="headerlink" title="继承中构造方法的访问特点"></a>继承中构造方法的访问特点</h5><ul><li>子类构造方法中有一个默认隐含的<code>super()</code>调用，所以一定是先调用父类构造后执行子类构造</li><li>子类构造通过super关键字来调用父类重载构造</li><li>super的父类构造必须使用，必须是子类构造方法的第一个语句，不能一个子类构造调用多次super构造</li></ul><p><strong>总结</strong>：子类必须调用父类构造方法，不写则赠送super()；写了则使用指定的super 调用，super只能有一个，还必须是第一个</p><pre><code class="line-numbers language-java">//创建父类public class Fu {    public Fu() { //父类无参构造        System.out.println(&quot;父类构造&quot;);    }}</code></pre><pre><code class="line-numbers language-java">//创建子类public class zi extends Fu {    public zi() {        System.out.println(&quot;子类构造&quot;);    }}</code></pre><pre><code class="line-numbers language-java">public class Main {    public static void main(String[] args) {        zi z = new zi();    }}</code></pre><p>super的三种使用方法</p><ol start="2"><li><p>子类成员方法中访问父类的成员变量</p><pre><code class="line-numbers language-java">super.成员变量名;</code></pre></li><li><p>子类成员方法方法访问父类成员方法</p><pre><code class="line-numbers language-java">super.父类成员方法名;</code></pre></li><li><p>子类构造方法访问父类构造方法</p><pre><code class="line-numbers language-java">public zi(){    super();     //不写也可以，默认赠送}</code></pre></li></ol><p><strong>代码实例</strong></p><pre><code class="line-numbers language-java">//创建父类public class Fu {    int i = 10;    public void method(){        System.out.println(&quot;父类方法&quot;);    }}</code></pre><pre><code class="line-numbers language-java">//创建子类public class zi extends Fu{    int i = 20;}public void Main(){    int i = 30;    System.out.println(i);    //局部变量    System.out.printrn(this.i); //本类成员变量    System.out.println(super.i);//父类成员变量} public void method(){         super.method(); //访问父类的成员方法        System.out.println(&quot;父类方法&quot;);    }</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;Java继承&quot;&gt;&lt;a href=&quot;#Java继承&quot; class=&quot;headerlink&quot; title=&quot;Java继承&quot;&gt;&lt;/a&gt;Java继承&lt;/h5&gt;&lt;p&gt;在《Think in java》中有这样一句话：复用代码是Java众多引人注目的功能之一。但要想成为极具革命
      
    
    </summary>
    
      <category term="java" scheme="https://blon.club/categories/java/"/>
    
    
      <category term="java" scheme="https://blon.club/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>估值一个亿的AI源代码</title>
    <link href="https://blon.club/2019/08/07/%E4%BC%B0%E5%80%BC%E4%B8%80%E4%B8%AA%E4%BA%BF%E7%9A%84AI%E6%BA%90%E4%BB%A3%E7%A0%81/"/>
    <id>https://blon.club/2019/08/07/估值一个亿的AI源代码/</id>
    <published>2019-08-07T15:00:33.000Z</published>
    <updated>2019-08-07T15:02:44.176Z</updated>
    
    <content type="html"><![CDATA[<h4 id="估值一个亿的AI源代码"><a href="#估值一个亿的AI源代码" class="headerlink" title="估值一个亿的AI源代码"></a><strong>估值一个亿的AI源代码</strong></h4><pre><code class="line-numbers language-java">public class Ai {    public static void main(String[] args) {        Scanner sca = new Scanner(System.in);        System.out.println(&quot;你好，请问需要什么帮助？&quot;);        String str;        while (true) {            str = sca.next();            str = str.replace(&quot;吗&quot;, &quot;&quot;);            str = str.replace(&quot;?&quot;, &quot;!&quot;);            str = str.replace(&quot;？&quot;, &quot;！&quot;);            System.out.println(str);        }    }}</code></pre><p><img src="https://i.loli.net/2019/08/07/CE9NHWLaUP1dDgQ.png" alt="CE9NHWLaUP1dDgQ"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;估值一个亿的AI源代码&quot;&gt;&lt;a href=&quot;#估值一个亿的AI源代码&quot; class=&quot;headerlink&quot; title=&quot;估值一个亿的AI源代码&quot;&gt;&lt;/a&gt;&lt;strong&gt;估值一个亿的AI源代码&lt;/strong&gt;&lt;/h4&gt;&lt;pre&gt;&lt;code class=&quot;li
      
    
    </summary>
    
      <category term="java" scheme="https://blon.club/categories/java/"/>
    
    
      <category term="java" scheme="https://blon.club/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Java Math工具类</title>
    <link href="https://blon.club/2019/07/31/Java-Math%E5%B7%A5%E5%85%B7%E7%B1%BB/"/>
    <id>https://blon.club/2019/07/31/Java-Math工具类/</id>
    <published>2019-07-31T10:10:09.000Z</published>
    <updated>2019-07-31T16:04:05.917Z</updated>
    
    <content type="html"><![CDATA[<h5 id="java-lang-Math-是数学相关工具类，里面包含大量静态方法，完成与数学相关操作"><a href="#java-lang-Math-是数学相关工具类，里面包含大量静态方法，完成与数学相关操作" class="headerlink" title="java.lang.Math 是数学相关工具类，里面包含大量静态方法，完成与数学相关操作"></a><strong>java.lang.Math 是数学相关工具类，里面包含大量静态方法，完成与数学相关操作</strong></h5><h6 id="public-static-double-abs-double-a-获取绝对值"><a href="#public-static-double-abs-double-a-获取绝对值" class="headerlink" title="public static double abs(double a); 获取绝对值"></a>public static double <strong>abs</strong>(double a); 获取绝对值</h6><pre><code class="line-numbers language-java">public class DemoMath {    //获取绝对值    public static void main(String[] args) {        System.out.println(Math.abs(3.14));    //3.14        System.out.println(Math.abs(0));       //0        System.out.println(Math.abs(-3.14));   //3.14    }}</code></pre><h6 id="public-static-double-ceil-double-a-想上取整"><a href="#public-static-double-ceil-double-a-想上取整" class="headerlink" title="public static double ceil(double a) 想上取整"></a>public static double <strong>ceil</strong>(double a) 想上取整</h6><pre><code class="line-numbers language-java">        System.out.println(Math.ceil(3.9));    //4.0        System.out.println(Math.ceil(3.4));    //4.0        System.out.println(Math.ceil(3.0));    //3.0</code></pre><h6 id="public-static-double-floor-double-a-向下取整"><a href="#public-static-double-floor-double-a-向下取整" class="headerlink" title="public static double floor(double a) 向下取整"></a>public static double <strong>floor</strong>(double a) 向下取整</h6><pre><code class="line-numbers language-java">        System.out.println(Math.floor(20.4));    //20.4</code></pre><h6 id="public-static-int-round-float-a-四舍五入，返回值无小数点"><a href="#public-static-int-round-float-a-四舍五入，返回值无小数点" class="headerlink" title="public static int round(float a) 四舍五入，返回值无小数点"></a>public static int <strong>round</strong>(float a) 四舍五入，返回值无小数点</h6><pre><code class="line-numbers language-java">        System.out.println(Math.round(15.3));    //15        System.out.println(Math.round(16.5));    //17</code></pre><h6 id="public-static-final-double-PI-近似圆周率常量"><a href="#public-static-final-double-PI-近似圆周率常量" class="headerlink" title="public static final double PI 近似圆周率常量"></a>public static final double <strong>PI</strong> 近似圆周率常量</h6><pre><code class="line-numbers language-java">//计算园面积 int a = 5    //半径System.out.println(Math.PI * (a * a ));    //78.53981633974483</code></pre><h6 id="小练习"><a href="#小练习" class="headerlink" title="小练习"></a>小练习</h6><p>计算 -10.8到5.9之间绝对值大于6，或是小于2.1的整数个数，</p><p>分析一下<br><img src="https://i.loli.net/2019/08/01/5d41bb2f81cc580542.png" alt="图例"></p><pre><code class="line-numbers language-java">/* 计算 -10.8到5.9之间绝对值大于6，或是小于2.1的整数个数 */ public static void main(String[] args) {        int i = 0;    //计数器        double min = -10.8;        double max = 5.9;        for (double d =Math.ceil(min) ; d &lt; max; d++) { //向上取整，        //初次之外还可以强转成int类型，舍弃小数位        //for (int  d =(int)min ; d &lt; max; d++) {            if (Math.abs(d) &gt; 6 || Math.abs(d) &lt; 2.1) {                i++;                //System.out.println((Math.abs(d));                System.out.println((int)Math.abs(d));    //强转成int类型打印Math.abs(d)            }        }        System.out.println(i);    //9    }</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;java-lang-Math-是数学相关工具类，里面包含大量静态方法，完成与数学相关操作&quot;&gt;&lt;a href=&quot;#java-lang-Math-是数学相关工具类，里面包含大量静态方法，完成与数学相关操作&quot; class=&quot;headerlink&quot; title=&quot;java
      
    
    </summary>
    
      <category term="java" scheme="https://blon.club/categories/java/"/>
    
    
      <category term="java" scheme="https://blon.club/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Java Arrays工具类</title>
    <link href="https://blon.club/2019/07/30/Java-Arrays%E5%B7%A5%E5%85%B7%E7%B1%BB/"/>
    <id>https://blon.club/2019/07/30/Java-Arrays工具类/</id>
    <published>2019-07-30T14:50:33.000Z</published>
    <updated>2019-07-30T15:54:16.674Z</updated>
    
    <content type="html"><![CDATA[<pre><code class="line-numbers language-java">/*java.util.Arrays是一个数组工具类，里面集成了大量静态方法，用来实现数组常见操作public class Arrays(将数组按变成字符串，格式 [元素1，元素2，元素3]) */import java.util.ArrayList;import java.util.Arrays;public class DemoArrays {    public static void main(String[] args) {        int[] arr = {10, 20, 30};        String s = Arrays.toString(arr);        System.out.println(s); //[10, 20, 30]    }}//public static void sort(数组) 按照升序（从小到大）对数组元素进行排序/*注意事项：如果是数值，sort默认按照从小到大排序，            如果是字符串，sort默认按照字母排序，如 a ~ z            如果是中文，则看所对于的数字            如果是自定义类型，这个自定义类需要Comparable或者Comparator接口的支持 */class Demo1Arrays {    public static void main(String[] args) {        int[] array = {11, 3, 8, 21, 14, 8};        System.out.println(Arrays.toString(array)); //排序前[11, 3, 8, 21, 14, 8]        Arrays.sort(array);        System.out.println(Arrays.toString(array)); //排序后[3, 8, 8, 11, 14, 21]        //当然对于字符串也行        String[] str = {&quot;bbb&quot;, &quot;aaa&quot;, &quot;z&quot;, &quot;ccc&quot;};        Arrays.sort(str);        System.out.println(Arrays.toString(str));    }}/*小练习将一个随机字符串进行的所有字符升序排列，倒序打印 */class Demo2 {    public static void main(String[] args) {        String str = &quot;wnciglsxmgf5461230241&quot;;        char[] chars = str.toCharArray();        Arrays.sort(chars);   //排序        //idea输入fori 加加 forr 减减        for (int i = chars.length - 1; i &gt;= 0; i--) {            System.out.print(chars[i] + &quot; &quot;);   //x w s n m l i g g f c 6 5 4 4 3 2 2 1 1 0        }    }}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;pre&gt;&lt;code class=&quot;line-numbers language-java&quot;&gt;/*
java.util.Arrays是一个数组工具类，里面集成了大量静态方法，用来实现数组常见操作
public class Arrays(将数组按变成字符串，格式 [元素1，元素2，元
      
    
    </summary>
    
      <category term="java" scheme="https://blon.club/categories/java/"/>
    
    
      <category term="java" scheme="https://blon.club/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Java 字符串常用方法</title>
    <link href="https://blon.club/2019/07/29/Java%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <id>https://blon.club/2019/07/29/Java 字符串常用方法/</id>
    <published>2019-07-28T16:13:04.000Z</published>
    <updated>2019-08-09T15:15:42.956Z</updated>
    
    <content type="html"><![CDATA[<h5 id="字符串的获取操作"><a href="#字符串的获取操作" class="headerlink" title="字符串的获取操作"></a>字符串的获取操作</h5><p>1、 public int length() 获取字符串的长度 </p><pre><code class="line-numbers language-java">//获取字符串的长度int length = &quot;gfdsfdfsdfhfsidhfsfh&quot;.length();</code></pre><p>2、 public String concat(String str) 拼接字符串</p><pre><code class="line-numbers language-java">//字符串拼接String str1 = &quot;Hello&quot;;String str1 = &quot;World&quot;;String str3 = str1.concat(str2);  </code></pre><p>3、public char charAt(int index) 获取指定位置的单个字符</p><pre><code class="line-numbers language-java">char c = &quot;hello&quot;.charAt(2); //获取第2号元素字符</code></pre><p>4、public int indexOf(String str) 查找字符串所在的索引位置，如果该字符串多次出现拿第一次的索引位置</p><pre><code class="line-numbers language-java">int place = &quot;helloworld&quot;.indexOf(&quot;owo&quot;);</code></pre><h5 id="字符串的截取方法"><a href="#字符串的截取方法" class="headerlink" title="字符串的截取方法"></a>字符串的截取方法</h5><ol><li>public String substring(int beginIndex) 截取从参数位置一直到末尾，返会新字符串</li><li>public String substring(int beginIndex, int endIndex) 截取从begin到end结束，中间的字符串 [begin end) 左闭右开 ，包含左不包含右</li></ol><p>代码实例</p><pre><code class="line-numbers language-java">String str1 = &quot;hellojava&quot;;String str2 = str1.substring(5);   //截取索引值5开始到末尾的字符串String str3 = str1.substring(3, 6);        //截取索引值3到6之间的字符串System.out.println(str2);   //javaSystem.out.println(str3);        //loj</code></pre><h5 id="字符串的转换常用方法"><a href="#字符串的转换常用方法" class="headerlink" title="字符串的转换常用方法"></a>字符串的转换常用方法</h5><ol><li>public char[] toCharArray() 将字符串转换成字节数组</li></ol><pre><code class="line-numbers language-java">char[] chars = &quot;java&quot;.toCharArray();System.out.println(chars[2]);             //结果 v//获取数组长度System.out.println(chars.length);        //结果 4</code></pre><ol start="2"><li>public byte[] getBytes() 获取当前字符串低层字节数组</li></ol><pre><code class="line-numbers language-java">byte[] bytes = &quot;ABC&quot;.getBytes();//遍历数组for (int i = 0; i &lt; bytes.length; i++) {    System.out.println(bytes[i]); //65 66 67}</code></pre><ol start="3"><li>字符串的内容替换 将老的字符串替换成新的字符串</li></ol><pre><code class="line-numbers language-java">//仿游戏敏感词替换String str = &quot;你TM的 ，会不会玩，垃圾，&quot;;String replace = str.replace(&quot;垃圾&quot;, &quot;**&quot;);System.out.println(replace);        //你TM的 ，会不会玩，**，</code></pre><h5 id="字符串的切分方法"><a href="#字符串的切分方法" class="headerlink" title="字符串的切分方法"></a>字符串的切分方法</h5><ol><li>按照参数规则，将字符串切分成为若干份    </li></ol><pre><code class="line-numbers language-java">String s = &quot;小王，小红，小绿&quot;;String[] splitArr = s.split(&quot;,&quot;);for (int i = 0; i &lt; splitArr.length; i++) {    System.out.print(splitArr[i]);   //小王 小红 小绿}</code></pre><p>注意，英文句点”.” 不能切成功，原因是英文句点在单独出现时在正则表达式当中有特殊含义,如果要进行英文句点切分，需要加上两反斜杠 <code>\\.</code></p><pre><code class="line-numbers language-java">String s = &quot;小王.小红.小绿&quot;;String[] splitArr = s.split(&quot;\\.&quot;);for (int i = 0; i &lt; splitArr.length; i++) {    System.out.println(splitArr[i]);}</code></pre><h5 id="小练习"><a href="#小练习" class="headerlink" title="小练习"></a>小练习</h5><p>定义一个方法，将数组{1,2,3}按照指定格式拼接字符串 ，格式[word1#word2#word3]</p><pre><code class="line-numbers language-java">public static void main(String[] args) {    int[] arr = {1, 2, 3};    //System.out.println(fromarrtoString(arr));    String string = fromarrtoString(arr);    System.out.println(string);}public static String fromarrtoString(int[] arr) {    String str = &quot;[&quot;;    for (int i = 0; i &lt; arr.length; i++) {        if (i == arr.length - 1) {            str += &quot;word&quot; + arr[i] + &quot;]&quot;;        } else {            str += &quot;word&quot; + arr[i] + &quot;#&quot;;        }    }    return str;}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;字符串的获取操作&quot;&gt;&lt;a href=&quot;#字符串的获取操作&quot; class=&quot;headerlink&quot; title=&quot;字符串的获取操作&quot;&gt;&lt;/a&gt;字符串的获取操作&lt;/h5&gt;&lt;p&gt;1、 public int length() 获取字符串的长度 &lt;/p&gt;
&lt;pre&gt;&lt;cod
      
    
    </summary>
    
      <category term="java" scheme="https://blon.club/categories/java/"/>
    
    
      <category term="java" scheme="https://blon.club/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>利用Gulp压缩Hexo博客</title>
    <link href="https://blon.club/2019/07/28/%E5%88%A9%E7%94%A8Gulp%E5%8E%8B%E7%BC%A9Hexo%E5%8D%9A%E5%AE%A2/"/>
    <id>https://blon.club/2019/07/28/利用Gulp压缩Hexo博客/</id>
    <published>2019-07-28T08:27:22.000Z</published>
    <updated>2019-07-30T15:57:44.843Z</updated>
    
    <content type="html"><![CDATA[<h6 id="1-全局安装-Gulp"><a href="#1-全局安装-Gulp" class="headerlink" title="1.全局安装 Gulp"></a>1.全局安装 Gulp</h6><pre><code>npm install --global gulp</code></pre><p>上面那条命令基本上废了，很慢，而且还各种报错，失败了n次了。安装失败的可以用下面这条命令</p><pre><code>sudo cnpm install --global gulp</code></pre><p>如果是windows系统，以管理员方式打开cmd 执行下面的命令</p><pre><code>cnpm install --global gulp</code></pre><p>安装完后执行 <code>gulp -v</code>查看是否安装</p><p><img src="https://i.loli.net/2019/07/28/5d3d611d3351988178.png" alt="5d3d611d3351988178"></p><p>进入博客项目根目录，执行下面这条命令，安装gulp插件</p><pre><code>npm i gulp gulp-htmlclean gulp-htmlmin gulp-imagemin gulp-minify-css gulp-uglify --save</code></pre><h6 id="2-创建-gulpfile-js-文件"><a href="#2-创建-gulpfile-js-文件" class="headerlink" title="2.创建 gulpfile.js 文件"></a>2.创建 gulpfile.js 文件</h6><p>同样是在博客项目根目录下，创建gulpfile.js文件，将一下代码拷贝到该文件，可能有些会报错，但无关紧要，</p><pre><code>var gulp = require(&#39;gulp&#39;);var minifycss = require(&#39;gulp-minify-css&#39;);var uglify = require(&#39;gulp-uglify&#39;);var htmlmin = require(&#39;gulp-htmlmin&#39;);var htmlclean = require(&#39;gulp-htmlclean&#39;);var imagemin = require(&#39;gulp-imagemin&#39;);// 压缩htmlgulp.task(&#39;minify-html&#39;, function() {    return gulp.src(&#39;./public/**/*.html&#39;)        .pipe(htmlclean())        .pipe(htmlmin({            removeComments: true,            minifyJS: true,            minifyCSS: true,            minifyURLs: true,        }))        .pipe(gulp.dest(&#39;./public&#39;))});// 压缩cssgulp.task(&#39;minify-css&#39;, function() {    return gulp.src(&#39;./public/**/*.css&#39;)        .pipe(minifycss({            compatibility: &#39;ie8&#39;        }))        .pipe(gulp.dest(&#39;./public&#39;));});// 压缩jsgulp.task(&#39;minify-js&#39;, function() {    return gulp.src(&#39;./public/js/**/*.js&#39;)        .pipe(uglify())        .pipe(gulp.dest(&#39;./public&#39;));});// 压缩图片gulp.task(&#39;minify-images&#39;, function() {    return gulp.src(&#39;./public/images/**/*.*&#39;)        .pipe(imagemin(        [imagemin.gifsicle({&#39;optimizationLevel&#39;: 3}),        imagemin.jpegtran({&#39;progressive&#39;: true}),        imagemin.optipng({&#39;optimizationLevel&#39;: 7}),        imagemin.svgo()],        {&#39;verbose&#39;: true}))        .pipe(gulp.dest(&#39;./public/images&#39;))});// 默认任务gulp.task(&#39;default&#39;, gulp.parallel(    &#39;minify-html&#39;,&#39;minify-css&#39;,&#39;minify-js&#39;,&#39;minify-images&#39;));</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h6 id=&quot;1-全局安装-Gulp&quot;&gt;&lt;a href=&quot;#1-全局安装-Gulp&quot; class=&quot;headerlink&quot; title=&quot;1.全局安装 Gulp&quot;&gt;&lt;/a&gt;1.全局安装 Gulp&lt;/h6&gt;&lt;pre&gt;&lt;code&gt;npm install --global gulp&lt;
      
    
    </summary>
    
      <category term="hexo" scheme="https://blon.club/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://blon.club/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Java 字符串概述及比较</title>
    <link href="https://blon.club/2019/07/27/Java-%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%A6%82%E8%BF%B0%E5%8F%8A%E6%AF%94%E8%BE%83/"/>
    <id>https://blon.club/2019/07/27/Java-字符串概述及比较/</id>
    <published>2019-07-27T10:02:17.000Z</published>
    <updated>2019-07-27T10:12:05.571Z</updated>
    
    <content type="html"><![CDATA[<h6 id="String类概述"><a href="#String类概述" class="headerlink" title="String类概述"></a>String类概述</h6><p>包路径：<strong>java.lang.String</strong></p><p>api当中说：Java 程序中的所有字符串字面值（如 <code>&quot;abc&quot;</code> ）都作为此类的实例实现。其实是说：程序当中所有双引号字符串都是String对象，即使没有new也是。</p><h6 id="字符串的特点"><a href="#字符串的特点" class="headerlink" title="字符串的特点"></a>字符串的特点</h6><ul><li><strong>字符串的内容永不可变</strong></li><li>正是因为字符串不可改变所以字符串可以共享使用</li><li>字符串效果相当于char [] 字符数组，但底层原理是byte [] 字节数组</li></ul><h6 id="创建字符串常见的3-1种方式"><a href="#创建字符串常见的3-1种方式" class="headerlink" title="创建字符串常见的3+1种方式"></a>创建字符串常见的3+1种方式</h6><ol><li><p>三种构造方法</p><ol><li>public String (); 创建一个空白字符串，不含有任何内容</li><li>public String (char [] array); 根据char字符数组来创建字符串</li><li>public String (byte [] array); 根据byte字节数组来创建字符串</li></ol></li><li><p>一种直接创建</p><p>String str = “hello”;</p></li></ol><h6 id="代码实例"><a href="#代码实例" class="headerlink" title="代码实例"></a>代码实例</h6><pre><code class="line-numbers language-java">        //空参构造        String str = new String();        System.out.println(&quot;第一个字符串：&quot; + str);        //使用字符数组来创建字符串        char [] charArr = {&#39;A&#39;,&#39;B&#39;,&#39;C&#39;} ;        String str2 = new String(charArr) ;        System.out.println(&quot;第二个字符串：&quot; + str2);        //使用byte数组来创建字符串        byte [] bytrArr = {97,98,99};        String str3 = new String(bytrArr) ;        System.out.println(&quot;第二个字符串：&quot;+str3);        //直接创建        String s = &quot;hello&quot;;        System.out.println(s);</code></pre><h6 id="字符串的内容比较"><a href="#字符串的内容比较" class="headerlink" title="字符串的内容比较"></a>字符串的内容比较</h6><p>==是进行对象的地址值比较，如果需要字符串的内容比较，有如下两种方法</p><p>1、public boolean equals(Object obj) 参数可以是任何类型，只有参数是一个字符串并且内容相同时才会是true 否则为false</p><p>2、equalsIgnoreCase方法，不区分大小写</p><pre><code class="line-numbers language-java">/*  方法一  格式  参数1.equals(参数2)  该方法严格区分大小写  */        String str1 = &quot;ABC&quot;;        String str2 = &quot;ABC&quot;;        //两个变量比较        System.out.println(str1.equals(str2));        //变量和常量比较        System.out.println(str1.equals(&quot;hello&quot;));        //常量与常量比较        System.out.println(&quot;hello&quot;.equals(&quot;hello&quot;));  /*方法二  格式  参数1.equalsIgnoreCase(参数2)  该方法不区分大小写（英文）  */       System.out.println(str1.equalsIgnoreCase(&quot;abc&quot;));</code></pre><h6 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h6><p>1、任何对象都可以用Object 来接收</p><p>2、equals方法具有对称性 a.equals(b) 和 b.equals(a) 效果一样</p><p>3、如果比较双方一个是常量字符串一个是变量字符串 ，推荐把常量放在前面，变量放在后面，</p><pre><code class="line-numbers language-java">&quot;ABC&quot;.equals(str1) //推荐        str1.equals(&quot;ABC&quot;) //不推荐</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h6 id=&quot;String类概述&quot;&gt;&lt;a href=&quot;#String类概述&quot; class=&quot;headerlink&quot; title=&quot;String类概述&quot;&gt;&lt;/a&gt;String类概述&lt;/h6&gt;&lt;p&gt;包路径：&lt;strong&gt;java.lang.String&lt;/strong&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="java" scheme="https://blon.club/categories/java/"/>
    
    
      <category term="java" scheme="https://blon.club/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Java Random随机数</title>
    <link href="https://blon.club/2019/07/23/Java%20Random%E9%9A%8F%E6%9C%BA%E6%95%B0/"/>
    <id>https://blon.club/2019/07/23/Java Random随机数/</id>
    <published>2019-07-23T13:25:33.000Z</published>
    <updated>2019-07-23T14:12:21.776Z</updated>
    
    <content type="html"><![CDATA[<p>Random随机类三个步骤</p><p>1、导包</p><blockquote><p>import java.util.Random;</p></blockquote><p>2、创建</p><blockquote><p>Random r = new  Random</p></blockquote><p>3、使用</p><p>获取一个int类型的随机数，<code>int i = r.nextInt()</code>小括号可以留空，如果留空那么获取随机数范围是int范围里的随机一个数，</p><p>举个栗子</p><pre><code class="line-numbers language-java">public class Main{    public static void main(String []args) {        Random r = new Random();        int i = r.nextInt(); //输出结果为int范围中的随机一个数    }}</code></pre><p>如果要获取指定范围的随机数，那么小括号里填入范围数，int i = r.nextInt(100)<code>括号里的参数代表了范围 左闭右开区间</code>，实际含义是[ 0 ~ 100)，实际范围是0 ~ 99， 因为是右开区间所以右边的100是取不到的</p><pre><code class="line-numbers language-java">int i = r.nextInt(100); //范围0 ~ 99</code></pre><p>如果要想获取1 ~ 100之间的随机的，需要整体加 1 </p><pre><code class="line-numbers language-java">int i = r.nextInt(100) + 1; //范围1 ~ 100</code></pre><p>接下来玩个小游戏</p><p>猜一个1 ~ 100 以内的随机数，如果猜的数值大于随机数值则提示太大了，反之提示太小了，直到猜中为止。</p><pre><code class="line-numbers language-java">public class Main{    public static void main(String []args) {        //创建对象        Random r = new Random();        int i = r.nextInt(100) + 1;        Scanner sca = new Scanner(System.in);        while(true){ //创建死循环            System.out.println(&quot;请开始你的表演&quot;);            int j = sca.nextInt();            if(j &gt; i) {                System.out.println(&quot;太大了&quot;);            }else if(j &lt; i) {                System.out.println(&quot;太小了&quot;);            }else{                System.out.println(&quot;恭喜，答对了&quot;);                break;            }        }    }}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Random随机类三个步骤&lt;/p&gt;
&lt;p&gt;1、导包&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;import java.util.Random;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2、创建&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Random r = new  Rand
      
    
    </summary>
    
      <category term="java" scheme="https://blon.club/categories/java/"/>
    
    
      <category term="java" scheme="https://blon.club/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Java ArrayList集合</title>
    <link href="https://blon.club/2019/07/23/Java-ArrayList%E9%9B%86%E5%90%88/"/>
    <id>https://blon.club/2019/07/23/Java-ArrayList集合/</id>
    <published>2019-07-23T13:25:33.000Z</published>
    <updated>2019-07-30T14:52:48.630Z</updated>
    
    <content type="html"><![CDATA[<p>ArrayList <e></e></p><p>数组的长度不可以发生改变，但ArrayList集合的长度可以发生改变。对于ArrayList来说，有一个尖括号 <e> 代表泛型。</e></p><p>泛型：也就是装在集合中的所有元素，全都是统一类型。</p><p><strong>注意：泛型只能是引用类型，不能是基本类型、</strong></p><pre><code class="line-numbers language-java">public class Main{    public static void main(String []args) {        //创建一个String类型的Arraylist集合，名称为 list ,        //注意：从jdk 1.7开始，右侧的尖括号可以不写内容，但括号本身还是要写        ArrayList &lt;String&gt; list = new ArrayList&lt;&gt; ();        System.out.println(list); //注意：对于Arraylist集合来说，直接打印得到不是地址值，如过内容为空，那么打印的结果是 []    }}</code></pre><p>public boolean add (E e);向集合中添加元素，参数类型和泛型一致</p><p>向集合添加数据，要用到<code>add方法</code></p><pre><code class="line-numbers language-java">list.add (&quot;小王&quot;);list.add (&quot;小张&quot;);list.add (&quot;小红&quot;);System.out.println(list); //[小王, 小张, 小红]boolean b = list.add (&quot;小王&quot;);System.out.println(b); //true 对于ArrayList集合来说，add添加方法是一定能添加成功的，但对于其他集合add添加方法不一定能成功</code></pre><p>public E get (int index);从集合中获取一个元素，使用<code>get方法</code></p><pre><code class="line-numbers language-java">String str = list.get(1); //获取的索引值是从0开始的</code></pre><p>public E remove (int index);从集合中删除元素，使用<code>remove方法</code></p><pre><code class="line-numbers language-java">String remove = list.remove(1); //索引值从0开始System.out.println(remove); //打印被删除的元素System.out.println(list); //打印删除后的ArrayLis集合</code></pre><p>public int size() ;获取Arraylist 集合的长度。也就是集合的元素个数 <code>size()方法</code></p><pre><code class="line-numbers language-java">int size = list.size()</code></pre><p>遍历集合</p><pre><code class="line-numbers language-java">public class Main{    public static void main(String []args) {         ArrayList &lt;String&gt; list = new ArrayList&lt;&gt; ();         list.add (&quot;小王&quot;);         list.add (&quot;小张&quot;);         list.add (&quot;小红&quot;);         //idea快速生成 list.fori         for (int i = 0; i &lt; list.size(); i++) {            System.out.println(list.get(i));            /*打印结果              小王              小张              小红 */        }    }}</code></pre><p>小练习一</p><pre><code class="line-numbers language-java">import java.util.ArrayList;/*题目要求：定义4个学生对象，添加到集合中，并且遍历 */public class Demo {    public static void main(String[] args) {        //创建对象        Student one = new Student(&quot;小王&quot;,18) ;        Student two = new Student(&quot;小张&quot;,19) ;        Student three = new Student(&quot;小红&quot;,20) ;        Student four = new Student(&quot;小绿&quot;,21) ;        //创建集合        ArrayList &lt;Student&gt; list = new ArrayList&lt;&gt;();        //添加到集合        list.add(one);        list.add(two);        list.add(three);        list.add(four);        //遍历        for (int i = 0; i &lt; list.size(); i++) {            Student stu = list.get(i);            System.out.println(&quot;姓名：&quot;+ stu.getName()+ &quot;\t年龄：&quot; + stu.getAge());        }    }}</code></pre><pre><code class="line-numbers language-java">//创建学生类public class Student {    private String name ;    private int age ;    //无参构造    public Student() {    }    //全参构造    public Student(String name, int age) {        this.name = name;        this.age = age;    }    //Get and Set    public String getName() {        return name;    }    public void setName(String name) {        this.name = name;    }    public int getAge() {        return age;    }    public void setAge(int age) {        this.age = age;    }}</code></pre><p>小练习二</p><pre><code class="line-numbers language-java">import java.util.ArrayList;/*题目要求：按指定格式输出集合 如{元素1@元素2@元素3@ ...} */public class Demo {    public static void main(String[] args) {        ArrayList&lt;String&gt; list = new ArrayList&lt;&gt;();        list.add(&quot;喜羊羊&quot;);        list.add(&quot;美羊羊&quot;);        list.add(&quot;懒羊羊&quot;);        System.out.println(list); //默认格式：[喜羊羊, 美羊羊, 懒羊羊]        PrintlnArrayList(list);    }    //定义方法    public static void PrintlnArrayList(ArrayList&lt;String&gt; list) {        System.out.print(&quot;{&quot;);        for (int i = 0; i &lt; list.size(); i++) {            String name = list.get(i);            if (i == list.size() - 1) {   //判断一下是否为最后一个，如果是最后一个元素，那么以 } 结尾                System.out.println(name + &quot;}&quot;);            } else {                System.out.print(name + &quot;@&quot;); //{喜羊羊@美羊羊@懒羊羊}            }        }    }</code></pre><p>小练习三</p><pre><code class="line-numbers language-java">/*题目要求：用一个大集合存入20 个随机数，自定义方法筛选其中偶数，将其放入小集合中 */import java.util.ArrayList;import java.util.Random;public class DemoArrayList {    public static void main(String[] args) {        //创建大集合        ArrayList&lt;Integer&gt; maxlist = new ArrayList&lt;&gt;();        //创建随机数        Random r = new Random();        for (int i = 0; i &lt; 20; i++) {            int ran = r.nextInt(100) + 1;            maxlist.add(ran);        }        //System.out.println(maxlist);        //调用方法        ArrayList&lt;Integer&gt; min = min(maxlist);        System.out.println(&quot;偶数总共有&quot;+min.size()+&quot;个&quot;);        for (int i = 0; i &lt; min.size(); i++) {            //Integer integer = min.get(i);            System.out.println(min.get(i));        }    }    public static ArrayList&lt;Integer&gt; min (ArrayList&lt;Integer&gt; maxlist){        //创建小集合        ArrayList&lt;Integer&gt; minlist = new ArrayList&lt;&gt;();        for (int i = 0; i &lt; maxlist.size(); i++) {           if (maxlist.get(i) % 2 == 0) {              minlist.add(maxlist.get(i)) ;           }        }        return minlist ;    }}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;ArrayList &lt;e&gt;&lt;/e&gt;&lt;/p&gt;
&lt;p&gt;数组的长度不可以发生改变，但ArrayList集合的长度可以发生改变。对于ArrayList来说，有一个尖括号 &lt;e&gt; 代表泛型。&lt;/e&gt;&lt;/p&gt;
&lt;p&gt;泛型：也就是装在集合中的所有元素，全都是统一类型。&lt;/p&gt;
&lt;p&gt;&lt;s
      
    
    </summary>
    
      <category term="java" scheme="https://blon.club/categories/java/"/>
    
    
      <category term="java" scheme="https://blon.club/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Java 匿名对象概述</title>
    <link href="https://blon.club/2019/07/23/Java%20%E5%8C%BF%E5%90%8D%E5%AF%B9%E8%B1%A1%E6%A6%82%E8%BF%B0/"/>
    <id>https://blon.club/2019/07/23/Java 匿名对象概述/</id>
    <published>2019-07-23T08:25:17.000Z</published>
    <updated>2019-07-23T10:17:59.920Z</updated>
    
    <content type="html"><![CDATA[<p>一般情况我们创建一个对象，总是要给对象取一个名字，但在有些情况下这个名字是可以省略的。没有名字的对象就叫匿名对像。</p><p>一般情况创建对象的标准格式</p><blockquote><p>类名称 对象名 = new 类名称();</p></blockquote><p>举个栗子</p><pre><code class="line-numbers language-java">public class Main{    public static void main(String []args) {        //根据Person类创建对象        Person person = new Person();        person.name = &quot;村长&quot;;        person.Main //我叫村长    }}</code></pre><p>创建一个类</p><pre><code class="line-numbers language-java">public class Person {    String name;    public void Main (){        System.out.println(&quot;我叫&quot; + name)    }}</code></pre><p>匿名对像格式，只有右边的对象，没有左边的名字以及赋值运算符</p><blockquote><p>new 类名称 () ;</p></blockquote><pre><code class="line-numbers language-java">new Person().name = &quot;村长&quot;new Person().Main //   我叫null 输出结果不会是“我叫村长”，原因是创建了一个全新的匿名对象</code></pre><p>注意事项</p><p>匿名对象只能使用唯一的一次，下次使用只能再创建</p><p>使用建议</p><p>如果确定一个对象，只需要使用唯一的一次，那就可以使用匿名对象</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一般情况我们创建一个对象，总是要给对象取一个名字，但在有些情况下这个名字是可以省略的。没有名字的对象就叫匿名对像。&lt;/p&gt;
&lt;p&gt;一般情况创建对象的标准格式&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;类名称 对象名 = new 类名称();&lt;/p&gt;
&lt;/blockquote&gt;
      
    
    </summary>
    
      <category term="java" scheme="https://blon.club/categories/java/"/>
    
    
      <category term="java" scheme="https://blon.club/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Java 自增自减概述</title>
    <link href="https://blon.club/2019/07/22/Java%20%E8%87%AA%E5%A2%9E%E8%87%AA%E5%87%8F%E6%A6%82%E8%BF%B0/"/>
    <id>https://blon.club/2019/07/22/Java 自增自减概述/</id>
    <published>2019-07-22T07:27:17.000Z</published>
    <updated>2019-07-22T16:23:48.369Z</updated>
    
    <content type="html"><![CDATA[<h6 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h6><p>自增操作符 ++ ，即变量自身加1。自减操作符 – ，即变量自身减1 ，在单独使用时前++和后++没有区别，</p><h6 id="二、分类"><a href="#二、分类" class="headerlink" title="二、分类"></a>二、分类</h6><p>自增操作主要分为<code>前置自增</code>和<code>后置自增</code>，相同自减操作也一样，主要分为<code>前置自减</code>和<code>后置自减</code>演示如下代码</p><pre><code class="line-numbers language-java">//自增int i = 10,j = 20 ;i++;    //i = 11++j;    //j = 21//自减i--    //i = 10--j    //j = 20</code></pre><p>如下表格，进行赋值操作 int i = <code>操作符</code></p><table><thead><tr><th align="center">操作符</th><th align="center">名称</th><th align="center">描述</th><th align="center">结果(假设 j = 1)</th></tr></thead><tbody><tr><td align="center">var++</td><td align="center">后置自增</td><td align="center">将var加1，在语句中使用原来的var</td><td align="center">i = 1 , j = 2</td></tr><tr><td align="center">++var</td><td align="center">前置自增</td><td align="center">将var加1，在语句中使用新的var</td><td align="center">i = 2 , j = 2</td></tr><tr><td align="center">var–</td><td align="center">后置自减</td><td align="center">将var减1，语句中使用原来的var</td><td align="center">i = 1 , j = 0</td></tr><tr><td align="center">–var</td><td align="center">前置自减</td><td align="center">将var减1，语句中使用新的var</td><td align="center">i = 0 , j = 0</td></tr></tbody></table><pre><code class="line-numbers language-java">// 思路： a++的值为 a ，++a的值为a+1int a = 5 ,b = 5 ;int c = a++;  //分析：将a++的值 5 赋值给 c ,然后a再自增 1 int d = ++b;  //分析：将++b的值 6 赋值给 d ,然后b再自增 1System.out.println(a)    //a = 6System.out.println(b)    //b = 6System.out.println(c)    //c = 5 System.out.println(d)    //d = 6</code></pre><p>再举个栗子</p><pre><code class="line-numbers language-java">int i = 10 ;int j = i++ + i * 3;System.out.println(i) //11System.out.println(j) //43</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h6 id=&quot;一、概述&quot;&gt;&lt;a href=&quot;#一、概述&quot; class=&quot;headerlink&quot; title=&quot;一、概述&quot;&gt;&lt;/a&gt;一、概述&lt;/h6&gt;&lt;p&gt;自增操作符 ++ ，即变量自身加1。自减操作符 – ，即变量自身减1 ，在单独使用时前++和后++没有区别，&lt;/p&gt;
&lt;h6
      
    
    </summary>
    
      <category term="java" scheme="https://blon.club/categories/java/"/>
    
    
      <category term="java" scheme="https://blon.club/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Java for循环奇偶数练习</title>
    <link href="https://blon.club/2019/07/21/Java%20for%E5%BE%AA%E7%8E%AF%E5%A5%87%E5%81%B6%E6%95%B0%E7%BB%83%E4%B9%A0/"/>
    <id>https://blon.club/2019/07/21/Java for循环奇偶数练习/</id>
    <published>2019-07-21T07:01:18.000Z</published>
    <updated>2019-07-22T16:23:11.513Z</updated>
    
    <content type="html"><![CDATA[<h6 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h6><p>输出两位数的所有偶数</p><pre><code class="line-numbers language-java">// 方法一  public class even {     public static void main(String []args) {         //定义变量，范围 10 ~ 99         for (int i = 10; i &lt; 99; i++) {            //判断是否为偶数            if (i % 2 == 0) {                System.out.println(i);            }         }     } } // 方法二 public class even {     public static void main(String []args) {         for (int i = 10; i &lt; 99; i += 2) {             System.out.println(i);         }                      } } </code></pre><p>将方法二运用到 while 循环上，</p><pre><code class="line-numbers language-java">//题目要求：打印100 ~ 200的奇数public class even {    public static void main(String []args) {        int i = 100; //初始化 i        while (i &lt;= 200){            if (i % 2 == 1) {   //或者 i % 2 != 0                System.out.println(i);            }            i++ ;        }    }}//方法二 public class even {    public static void main(String []args) {         int i = 100; //初始化 i         while (i &lt;= 200){             System.out.println(i);             i += 2 ;         }     }}</code></pre><p>获取各个位之和</p><pre><code class="line-numbers language-java">/** * @author 村长ABC * @version 1.0.0 * @ClassName num.java * @Description 描述：获取各个位之和 * @Precautions 注意事项： * @createTime 2019年07月21日 15:47:00 */public class num {    public static void main(String[] args) {        int num = 123;        int i = num % 10 + num / 10 % 10 + num / 100 % 10;        System.out.println(i);    }}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h6 id=&quot;题目要求&quot;&gt;&lt;a href=&quot;#题目要求&quot; class=&quot;headerlink&quot; title=&quot;题目要求&quot;&gt;&lt;/a&gt;题目要求&lt;/h6&gt;&lt;p&gt;输出两位数的所有偶数&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;line-numbers language-java&quot;&gt;/
      
    
    </summary>
    
      <category term="java" scheme="https://blon.club/categories/java/"/>
    
    
      <category term="java" scheme="https://blon.club/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Next博客搭建---入门篇</title>
    <link href="https://blon.club/2019/07/19/Hexo-Next%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA-%E5%85%A5%E9%97%A8%E7%AF%87/"/>
    <id>https://blon.club/2019/07/19/Hexo-Next博客搭建-入门篇/</id>
    <published>2019-07-19T08:24:17.000Z</published>
    <updated>2019-07-19T06:18:00.000Z</updated>
    
    <content type="html"><![CDATA[<h5 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h5><h6 id="什么是-Hexo"><a href="#什么是-Hexo" class="headerlink" title="什么是 Hexo ?"></a>什么是 Hexo ?</h6><p>Hexo 是一个快速、简洁、高效、高逼格的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/" target="_blank" rel="noopener">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h6 id="安装所需要的工具"><a href="#安装所需要的工具" class="headerlink" title="安装所需要的工具"></a>安装所需要的工具</h6><p><a href="https://git-scm.com/" target="_blank" rel="noopener">Git</a>  __                             __ <a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a>    </p><p>安装完成后打开cmd（win + r ）输入分别下面两条命令查看版本信息，返回的是版本信息就说明安装成功了</p><pre><code>git --version     node -v</code></pre><p><img src="https://i.loli.net/2019/07/19/5d31838d48c0887935.png" alt="5d31838d48c0887935"></p><p>接下来就可以安装Hexo了，继续在命令行输入下面这条命令，第一条命令阔能会很慢，甚至要翻墙！所以这里给出了第二条命令，阿里的源，速度相对来说快很多。</p><pre><code> npm install -g hexo-cli</code></pre><pre><code>npm install -g cnpm --registry=https://registry.npm.taobao.org cnpm install hexo-cli -g</code></pre><p><img src="https://i.loli.net/2019/07/19/5d3185d2a9cf545447.png" alt="5d3185d2a9cf545447"></p><p>安装完成后输入 hexo -v 查看版本信息，返回的是版本信息就说明安装成功了</p><p><img src="https://i.loli.net/2019/07/19/5d3186567531833987.png" alt="5d3186567531833987"></p><h6 id="初始化hexo"><a href="#初始化hexo" class="headerlink" title="初始化hexo"></a>初始化hexo</h6><p>新建一个空文件夹，名称随意，打开后右键选择<code>Git Bash Here</code>打开Git命令窗口，然后执行</p><pre><code>$hexo init</code></pre><h6 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h6><pre><code>$npm install</code></pre><p>执行完后会在刚刚创建的文件夹中生成相关的文件</p><p><img src="https://i.loli.net/2019/07/19/5d31adaf1ce1379958.png" alt="5d31adaf1ce1379958"></p><p>最后执行下面的命令，完成后会出现一个网址 <code>http://localhost:4000</code>在浏览器输入这个网址就行了，因为是在调试模式下运行（为了方便后续更改）所以后台一直在执行，如果要关闭这个进程可以 Ctrl + c 关闭</p><pre><code>$ hexo clean &amp;&amp; hexo server --debug</code></pre><p><img src="https://i.loli.net/2019/07/19/5d31b15c8306934828.png" alt="5d31b15c8306934828"></p><h6 id="预览效果"><a href="#预览效果" class="headerlink" title="预览效果"></a>预览效果</h6><p><img src="https://i.loli.net/2019/07/19/5d31b1c23894c95971.png" alt="5d31b1c23894c95971"></p><p>至此，初步搭建完成，</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h5&gt;&lt;h6 id=&quot;什么是-Hexo&quot;&gt;&lt;a href=&quot;#什么是-Hexo&quot; class=&quot;headerlink&quot; title=&quot;什么是 Hexo 
      
    
    </summary>
    
      <category term="hexo" scheme="https://blon.club/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://blon.club/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Next博客搭建---修改底部标签样式</title>
    <link href="https://blon.club/2019/07/18/Hexo-Next%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA-%E4%BF%AE%E6%94%B9%E5%BA%95%E9%83%A8%E6%A0%87%E7%AD%BE%E6%A0%B7%E5%BC%8F/"/>
    <id>https://blon.club/2019/07/18/Hexo-Next博客搭建-修改底部标签样式/</id>
    <published>2019-07-18T15:35:22.000Z</published>
    <updated>2019-07-18T15:41:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>修改底部标签样式</p><p>一、打开文件 <code>Blog\themes\next\layout\_macro\post.swig</code>ctrl + f 查找 <code>rel=&quot;tag&quot;&gt;#</code>，如果没有就查找 <code>#</code> 然后替换成<code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code> 然后重建缓存，调试查看效果</p><p><img src="https://i.loli.net/2019/07/19/5d30a17c069e916380.png" alt="5d30a17c069e916380"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;修改底部标签样式&lt;/p&gt;
&lt;p&gt;一、打开文件 &lt;code&gt;Blog\themes\next\layout\_macro\post.swig&lt;/code&gt;ctrl + f 查找 &lt;code&gt;rel=&amp;quot;tag&amp;quot;&amp;gt;#&lt;/code&gt;，如果没有就查找 &lt;co
      
    
    </summary>
    
      <category term="hexo" scheme="https://blon.club/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://blon.club/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Next博客搭建---文章结尾添加版权信息</title>
    <link href="https://blon.club/2019/07/18/Hexo-Next%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA-%E6%96%87%E7%AB%A0%E7%BB%93%E5%B0%BE%E6%B7%BB%E5%8A%A0%E7%89%88%E6%9D%83%E4%BF%A1%E6%81%AF/"/>
    <id>https://blon.club/2019/07/18/Hexo-Next博客搭建-文章结尾添加版权信息/</id>
    <published>2019-07-18T07:20:47.000Z</published>
    <updated>2019-07-18T15:10:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>在文章结尾处添加版权信息</p><h5 id="一、修改主题文件"><a href="#一、修改主题文件" class="headerlink" title="一、修改主题文件"></a>一、修改主题文件</h5><p>打开 <code>Blog\themes\next\_config.yml</code> 按ctrl + f 查找 <code>creative_commons:</code>将post的值改为<code>true</code></p><pre><code class="line-numbers language-yaml"># Creative Commons 4.0 International License.# See: https://creativecommons.org/share-your-work/licensing-types-examples# Available values of license: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero# You can set a language value if you prefer a translated version of CC license, e.g. deed.zh# CC licenses are available in 39 languages, you can find the specific and correct abbreviation you need on https://creativecommons.org#版权信息creative_commons:  license: by-nc-sa   #表示当前使用的协议，可以随意更改  sidebar: false      #表示是否要显示在左侧边栏  post: true          #表示是否在文章结尾处显示  language:</code></pre><p>如果你觉得不够详细，可查看<a href="https://hexo-guide.readthedocs.io/zh_CN/latest/theme/[NexT]%E7%89%88%E6%9D%83%E4%BF%A1%E6%81%AF.html" target="_blank" rel="noopener"> hexo指南 </a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在文章结尾处添加版权信息&lt;/p&gt;
&lt;h5 id=&quot;一、修改主题文件&quot;&gt;&lt;a href=&quot;#一、修改主题文件&quot; class=&quot;headerlink&quot; title=&quot;一、修改主题文件&quot;&gt;&lt;/a&gt;一、修改主题文件&lt;/h5&gt;&lt;p&gt;打开 &lt;code&gt;Blog\themes\next\
      
    
    </summary>
    
      <category term="hexo" scheme="https://blon.club/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://blon.club/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Next博客搭建---文章后面添加结束语</title>
    <link href="https://blon.club/2019/07/18/Hexo-Next%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA-%E6%96%87%E7%AB%A0%E5%90%8E%E9%9D%A2%E6%B7%BB%E5%8A%A0%E7%BB%93%E6%9D%9F%E8%AF%AD/"/>
    <id>https://blon.club/2019/07/18/Hexo-Next博客搭建-文章后面添加结束语/</id>
    <published>2019-07-18T06:43:21.000Z</published>
    <updated>2019-07-18T15:09:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章后面添加结束标语</p><h5 id="一、新建文件"><a href="#一、新建文件" class="headerlink" title="一、新建文件"></a>一、新建文件</h5><p>在 <code>Blog\themes\next\layout\_macro</code> 下创建 <code>passage-end-tag.swig</code> 文件 ，打开该文件添加以下代码</p><pre><code class="line-numbers language-javascript">&lt;div&gt;    {% if not is_index %}        <div style="text-align:center;color: #3c3c3c;font-size:15px;">-------------本文结束<i class="fa fa-paw"></i>感谢您的阅读-------------</div>    {% endif %}&lt;/div&gt;//如果想替换别的颜色可以更改 color： #后面的色值， font-size:15px 文字大小</code></pre><h5 id="二、修改-post-swig-文件"><a href="#二、修改-post-swig-文件" class="headerlink" title="二、修改 post.swig 文件"></a>二、修改 post.swig 文件</h5><p>打开Blog\themes\next\layout_macro\post.swig文件，在<code>post-body</code>后，<code>post-footer</code>前，添加以下代码 ，可能会找不到，博主这里是直接添加到第 354 行的位置</p><pre><code>&lt;div&gt;  {% if not is_index %}      {% include 'passage-end-tag.swig' %}      {% endif %}&lt;/div&gt;</code></pre><h5 id="三、最后修改主题配置文件"><a href="#三、最后修改主题配置文件" class="headerlink" title="三、最后修改主题配置文件"></a>三、最后修改主题配置文件</h5><p>打开 Blog\themes\next _config.yml 在末尾的地方添加如下代码</p><p>#文章末尾添加“本文结束”标记</p><p>  passage_end_tag:<br>    enabled: true</p><p>最后进入博客根目录，执行下面这条命令即可，小扩展：hexo clean 重建缓存，Hexo server –debug 调试</p><p>$ hexo clean &amp;&amp; Hexo server –debug</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;文章后面添加结束标语&lt;/p&gt;
&lt;h5 id=&quot;一、新建文件&quot;&gt;&lt;a href=&quot;#一、新建文件&quot; class=&quot;headerlink&quot; title=&quot;一、新建文件&quot;&gt;&lt;/a&gt;一、新建文件&lt;/h5&gt;&lt;p&gt;在 &lt;code&gt;Blog\themes\next\layout\_mac
      
    
    </summary>
    
      <category term="hexo" scheme="https://blon.club/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://blon.club/tags/hexo/"/>
    
  </entry>
  
</feed>
